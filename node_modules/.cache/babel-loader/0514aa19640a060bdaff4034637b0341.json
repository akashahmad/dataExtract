{"ast":null,"code":"import _defineProperty from \"/Users/brohik/repo/adaptive-data-file-extract/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { ThemeProvider as _ThemeProvider } from \"styled-components\";\nvar _jsxFileName = \"/Users/brohik/repo/adaptive-data-file-extract/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider, StylesProvider, jssPreset } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { create } from 'jss';\nimport { Provider, inject, observer } from 'mobx-react';\nimport { compose, withProps } from 'recompose';\nimport Main from '@/layouts';\nimport Stores, { STORE_KEYS } from '@/stores';\nimport theme from '@/theme/darkTheme';\nimport createGlobalStyles from './globalStyles';\nconst jss = create(_objectSpread({}, jssPreset(), {\n  // Define a custom insertion point that JSS will look for when injecting the styles into the DOM.\n  insertionPoint: 'jss-insertion-point'\n}));\n\nconst muiTheme = theme => createMuiTheme({\n  palette: {\n    type: theme.muiTheme\n  },\n  appTheme: theme\n});\n\nconst GlobalStyles = createGlobalStyles();\n\nclass ThemedAppComponent extends React.Component {\n  render() {\n    return React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst ThemedApp = compose(inject(STORE_KEYS.VIEWMODESTORE), observer, withProps(({\n  [STORE_KEYS.VIEWMODESTORE]: {\n    viewMode\n  }\n}) => ({\n  viewMode\n})))(ThemedAppComponent);\n\nconst App = () => React.createElement(Provider, Object.assign({}, Stores(), {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), React.createElement(StylesProvider, {\n  jss: jss,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, React.createElement(_ThemeProvider, {\n  theme: theme,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(MuiThemeProvider, {\n  theme: muiTheme(theme),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(GlobalStyles, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}), React.createElement(CssBaseline, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), React.createElement(ThemedApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n})))));\n\nexport default App;","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/App.js"],"names":["React","createMuiTheme","ThemeProvider","MuiThemeProvider","StylesProvider","jssPreset","CssBaseline","create","Provider","inject","observer","compose","withProps","Main","Stores","STORE_KEYS","theme","createGlobalStyles","jss","insertionPoint","muiTheme","palette","type","appTheme","GlobalStyles","ThemedAppComponent","Component","render","ThemedApp","VIEWMODESTORE","viewMode","App"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,aAAa,IAAIC,gBAA1B,EAA4CC,cAA5C,EAA4DC,SAA5D,QAA6E,qBAA7E;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,MAAT,QAAuB,KAAvB;AAEA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,QAA2C,YAA3C;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,UAAnC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;AAEA,MAAMC,GAAG,GAAGX,MAAM,mBACXF,SAAS,EADE;AAEd;AACAc,EAAAA,cAAc,EAAE;AAHF,GAAlB;;AAMA,MAAMC,QAAQ,GAAGJ,KAAK,IAClBf,cAAc,CAAC;AACXoB,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEN,KAAK,CAACI;AADP,GADE;AAIXG,EAAAA,QAAQ,EAAEP;AAJC,CAAD,CADlB;;AAQA,MAAMQ,YAAY,GAAGP,kBAAkB,EAAvC;;AAEA,MAAMQ,kBAAN,SAAiCzB,KAAK,CAAC0B,SAAvC,CAAiD;AAC7CC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAL4C;;AAQjD,MAAMC,SAAS,GAAGjB,OAAO,CACrBF,MAAM,CAACM,UAAU,CAACc,aAAZ,CADe,EAErBnB,QAFqB,EAGrBE,SAAS,CAAC,CAAC;AAAE,GAACG,UAAU,CAACc,aAAZ,GAA4B;AAAEC,IAAAA;AAAF;AAA9B,CAAD,MAAmD;AACzDA,EAAAA;AADyD,CAAnD,CAAD,CAHY,CAAP,CAMhBL,kBANgB,CAAlB;;AAQA,MAAMM,GAAG,GAAG,MACR,oBAAC,QAAD,oBAAcjB,MAAM,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACI,oBAAC,cAAD;AAAgB,EAAA,GAAG,EAAEI,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,cAAD;AAAe,EAAA,KAAK,EAAEF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,gBAAD;AAAkB,EAAA,KAAK,EAAEI,QAAQ,CAACJ,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CADJ,CADJ,CADJ,CADJ;;AAcA,eAAee,GAAf","sourcesContent":["import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider as MuiThemeProvider, StylesProvider, jssPreset } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { create } from 'jss';\nimport { ThemeProvider } from 'styled-components/macro';\nimport { Provider, inject, observer } from 'mobx-react';\nimport { compose, withProps } from 'recompose';\n\nimport Main from '@/layouts';\nimport Stores, { STORE_KEYS } from '@/stores';\nimport theme from '@/theme/darkTheme';\nimport createGlobalStyles from './globalStyles';\n\nconst jss = create({\n    ...jssPreset(),\n    // Define a custom insertion point that JSS will look for when injecting the styles into the DOM.\n    insertionPoint: 'jss-insertion-point'\n});\n\nconst muiTheme = theme =>\n    createMuiTheme({\n        palette: {\n            type: theme.muiTheme\n        },\n        appTheme: theme\n    });\n\nconst GlobalStyles = createGlobalStyles();\n\nclass ThemedAppComponent extends React.Component {\n    render() {\n        return (\n            <Main />\n        );\n    }\n}\n\nconst ThemedApp = compose(\n    inject(STORE_KEYS.VIEWMODESTORE),\n    observer,\n    withProps(({ [STORE_KEYS.VIEWMODESTORE]: { viewMode } }) => ({\n        viewMode\n    }))\n)(ThemedAppComponent);\n\nconst App = () => (\n    <Provider {...Stores()}>\n        <StylesProvider jss={jss}>\n            <ThemeProvider theme={theme}>\n                <MuiThemeProvider theme={muiTheme(theme)}>\n                    <GlobalStyles />\n                    <CssBaseline />\n                    <ThemedApp />\n                </MuiThemeProvider>\n            </ThemeProvider>\n        </StylesProvider>\n    </Provider>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}