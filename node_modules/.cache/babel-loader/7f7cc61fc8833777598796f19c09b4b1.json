{"ast":null,"code":"var _jsxFileName = \"/Users/brohik/repo/adaptive-data-file-extract/src/containers/FilterByBuilding/index.js\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { getFilterOptionsClass } from \"@/stores/wrd_apis\";\nimport MultipleSelect from \"@/components/MultipleSelect\";\nimport { STORE_KEYS } from \"@/stores\";\n\nconst FilterByBuilding = ({\n  optBuildings,\n  isBdSet,\n  setClassesOpt,\n  setIsBuildingsSelected,\n  isDistrictSelected\n}) => {\n  return React.createElement(MultipleSelect, {\n    name: \"building\",\n    options: optBuildings,\n    isSet: isBdSet,\n    setOptions: setClassesOpt,\n    getDataFromServer: getFilterOptionsClass //disabled={!isDistrictSelected}\n    ,\n    setFlag: setIsBuildingsSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  });\n};\n\nexport default compose(inject(STORE_KEYS.VIEWMODESTORE), observer, withProps(({\n  [STORE_KEYS.VIEWMODESTORE]: {\n    optBuildings,\n    isBdSet,\n    setClassesOpt,\n    setIsBuildingsSelected,\n    isDistrictSelected\n  }\n}) => ({\n  optBuildings,\n  isBdSet,\n  setClassesOpt,\n  setIsBuildingsSelected,\n  isDistrictSelected\n})))(FilterByBuilding);","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/containers/FilterByBuilding/index.js"],"names":["React","compose","withProps","inject","observer","getFilterOptionsClass","MultipleSelect","STORE_KEYS","FilterByBuilding","optBuildings","isBdSet","setClassesOpt","setIsBuildingsSelected","isDistrictSelected","VIEWMODESTORE"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,SAASC,UAAT,QAA2B,UAA3B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA,aAAzB;AAAwCC,EAAAA,sBAAxC;AAAgEC,EAAAA;AAAhE,CAAD,KAA0F;AACjH,SACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEJ,YAFX;AAGE,IAAA,KAAK,EAAEC,OAHT;AAIE,IAAA,UAAU,EAAEC,aAJd;AAKE,IAAA,iBAAiB,EAAEN,qBALrB,CAME;AANF;AAOE,IAAA,OAAO,EAAEO,sBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CAZD;;AAcA,eAAeX,OAAO,CACpBE,MAAM,CAACI,UAAU,CAACO,aAAZ,CADc,EAEpBV,QAFoB,EAGpBF,SAAS,CACP,CAAC;AACC,GAACK,UAAU,CAACO,aAAZ,GAA4B;AAAEL,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,aAAzB;AAAwCC,IAAAA,sBAAxC;AAAgEC,IAAAA;AAAhE;AAD7B,CAAD,MAEO;AACLJ,EAAAA,YADK;AAELC,EAAAA,OAFK;AAGLC,EAAAA,aAHK;AAILC,EAAAA,sBAJK;AAKLC,EAAAA;AALK,CAFP,CADO,CAHW,CAAP,CAcbL,gBAda,CAAf","sourcesContent":["import React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { getFilterOptionsClass } from \"@/stores/wrd_apis\";\nimport MultipleSelect from \"@/components/MultipleSelect\";\n\nimport { STORE_KEYS } from \"@/stores\";\n\nconst FilterByBuilding = ({ optBuildings, isBdSet, setClassesOpt, setIsBuildingsSelected, isDistrictSelected }) => {\n  return (\n    <MultipleSelect\n      name=\"building\"\n      options={optBuildings}\n      isSet={isBdSet}\n      setOptions={setClassesOpt}\n      getDataFromServer={getFilterOptionsClass}\n      //disabled={!isDistrictSelected}\n      setFlag={setIsBuildingsSelected}\n    />\n  );\n};\n\nexport default compose(\n  inject(STORE_KEYS.VIEWMODESTORE),\n  observer,\n  withProps(\n    ({\n      [STORE_KEYS.VIEWMODESTORE]: { optBuildings, isBdSet, setClassesOpt, setIsBuildingsSelected, isDistrictSelected }\n    }) => ({\n      optBuildings,\n      isBdSet,\n      setClassesOpt,\n      setIsBuildingsSelected,\n      isDistrictSelected\n    })\n  )\n)(FilterByBuilding);\n"]},"metadata":{},"sourceType":"module"}