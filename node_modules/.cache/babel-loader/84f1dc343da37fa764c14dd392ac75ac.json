{"ast":null,"code":"import React from 'react';\nexport function convertHexToRgba(hex, alpha = 1) {\n  let c;\n\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split('');\n\n    if (c.length === 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n\n    c = \"0x\".concat(c.join(''));\n    return \"rgba(\".concat([c >> 16 & 255, c >> 8 & 255, c & 255].join(','), \",\").concat(alpha, \")\");\n  }\n\n  throw new Error(\"Bad Hex \".concat(hex));\n}","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/utils/index.js"],"names":["React","convertHexToRgba","hex","alpha","c","test","substring","split","length","join","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,KAAK,GAAG,CAAvC,EAA0C;AAC7C,MAAIC,CAAJ;;AACA,MAAI,2BAA2BC,IAA3B,CAAgCH,GAAhC,CAAJ,EAA0C;AACtCE,IAAAA,CAAC,GAAGF,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiBC,KAAjB,CAAuB,EAAvB,CAAJ;;AACA,QAAIH,CAAC,CAACI,MAAF,KAAa,CAAjB,EAAoB;AAChBJ,MAAAA,CAAC,GAAG,CAACA,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,EAAmBA,CAAC,CAAC,CAAD,CAApB,EAAyBA,CAAC,CAAC,CAAD,CAA1B,EAA+BA,CAAC,CAAC,CAAD,CAAhC,CAAJ;AACH;;AACDA,IAAAA,CAAC,eAAQA,CAAC,CAACK,IAAF,CAAO,EAAP,CAAR,CAAD;AACA,0BAAe,CAAEL,CAAC,IAAI,EAAN,GAAY,GAAb,EAAmBA,CAAC,IAAI,CAAN,GAAW,GAA7B,EAAkCA,CAAC,GAAG,GAAtC,EAA2CK,IAA3C,CAAgD,GAAhD,CAAf,cAAuEN,KAAvE;AACH;;AACD,QAAM,IAAIO,KAAJ,mBAAqBR,GAArB,EAAN;AACH","sourcesContent":["import React from 'react';\n\nexport function convertHexToRgba(hex, alpha = 1) {\n    let c;\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n        c = hex.substring(1).split('');\n        if (c.length === 3) {\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c = `0x${c.join('')}`;\n        return `rgba(${[(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',')},${alpha})`;\n    }\n    throw new Error(`Bad Hex ${hex}`);\n}\n"]},"metadata":{},"sourceType":"module"}