{"ast":null,"code":"import _slicedToArray from \"/Users/brohik/repo/adaptive-data-file-extract/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brohik/repo/adaptive-data-file-extract/src/components/Select/index.js\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { STORE_KEYS } from \"@/stores\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction SelectItem({\n  name,\n  options,\n  setPostQuery,\n  setFlag\n}) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const handleChange = e => {\n    setValue(e.target.value); // if (name === \"Grade\" && e.target.value) {\n    //   setFlag(true);\n    // }\n\n    if (name === \"grade\" && e.target.value !== \" \") {\n      setFlag(true);\n    } else if (e.target.value === \" \") {\n      setFlag(false);\n    }\n\n    setPostQuery(name.toLowerCase(), e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"label-\".concat(name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Data by \".concat(name)), React.createElement(Select, {\n    labelId: \"label-\".concat(name),\n    id: name,\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, options.map(option => React.createElement(MenuItem, {\n    key: option.name,\n    value: option.value === null ? option.name : option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, option.name)))));\n}\n\nexport default compose(inject(STORE_KEYS.VIEWMODESTORE), observer, withProps(({\n  [STORE_KEYS.VIEWMODESTORE]: {\n    setPostQuery\n  }\n}) => ({\n  setPostQuery\n})))(SelectItem);","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/components/Select/index.js"],"names":["React","compose","withProps","inject","observer","makeStyles","InputLabel","MenuItem","FormControl","Select","STORE_KEYS","useStyles","theme","formControl","margin","spacing","width","selectEmpty","marginTop","SelectItem","name","options","setPostQuery","setFlag","classes","useState","value","setValue","handleChange","e","target","toLowerCase","map","option","VIEWMODESTORE"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { STORE_KEYS } from \"@/stores\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction SelectItem({ name, options, setPostQuery, setFlag }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"\");\n  const handleChange = e => {\n    setValue(e.target.value);\n    // if (name === \"Grade\" && e.target.value) {\n    //   setFlag(true);\n    // }\n    if (name === \"grade\" && e.target.value !== \" \") {\n      setFlag(true);\n    } else if (e.target.value === \" \") {\n      setFlag(false);\n    }\n    setPostQuery(name.toLowerCase(), e.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id={`label-${name}`}>{`Data by ${name}`}</InputLabel>\n        <Select\n          labelId={`label-${name}`}\n          id={name}\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map(option => (\n            <MenuItem key={option.name} value={option.value === null ? option.name : option.value}>\n              {option.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default compose(\n  inject(STORE_KEYS.VIEWMODESTORE),\n  observer,\n  withProps(({ [STORE_KEYS.VIEWMODESTORE]: { setPostQuery } }) => ({\n    setPostQuery\n  }))\n)(SelectItem);\n"]},"metadata":{},"sourceType":"module"}