{"ast":null,"code":"var _jsxFileName = \"/Users/brohik/repo/adaptive-data-file-extract/src/containers/FilterByTest/index.js\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport SelectItem from \"@/components/Select\";\nimport { getFilterOptionsEventSecond } from \"@/stores/wrd_apis\";\nimport { STORE_KEYS } from \"@/stores\";\nconst test = [{\n  name: \" \",\n  value: \" \"\n}, {\n  name: \"Math\",\n  value: \"M\"\n}, {\n  name: \"Reading\",\n  value: \"R\"\n}];\n\nfunction FilterByTest({\n  setIsTestSelected,\n  setEventsOpt\n}) {\n  return React.createElement(SelectItem, {\n    name: \"Test\",\n    options: test,\n    setFlag: setIsTestSelected,\n    getDataFromServer: getFilterOptionsEventSecond,\n    setOptions: setEventsOpt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n}\n\nexport default compose(inject(STORE_KEYS.VIEWMODESTORE), observer, withProps(({\n  [STORE_KEYS.VIEWMODESTORE]: {\n    setIsTestSelected,\n    setEventsOpt\n  }\n}) => ({\n  setIsTestSelected,\n  setEventsOpt\n})))(FilterByTest);","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/containers/FilterByTest/index.js"],"names":["React","compose","withProps","inject","observer","SelectItem","getFilterOptionsEventSecond","STORE_KEYS","test","name","value","FilterByTest","setIsTestSelected","setEventsOpt","VIEWMODESTORE"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,2BAAT,QAA4C,mBAA5C;AACA,SAASC,UAAT,QAA2B,UAA3B;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFW,EAGX;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHW,CAAb;;AAMA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAtB,EAA2D;AACzD,SACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAEL,IAFX;AAGE,IAAA,OAAO,EAAEI,iBAHX;AAIE,IAAA,iBAAiB,EAAEN,2BAJrB;AAKE,IAAA,UAAU,EAAEO,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD;;AAED,eAAeZ,OAAO,CACpBE,MAAM,CAACI,UAAU,CAACO,aAAZ,CADc,EAEpBV,QAFoB,EAGpBF,SAAS,CACP,CAAC;AACC,GAACK,UAAU,CAACO,aAAZ,GAA4B;AAAEF,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB;AAD7B,CAAD,MAEO;AACLD,EAAAA,iBADK;AAELC,EAAAA;AAFK,CAFP,CADO,CAHW,CAAP,CAWbF,YAXa,CAAf","sourcesContent":["import React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport SelectItem from \"@/components/Select\";\nimport { getFilterOptionsEventSecond } from \"@/stores/wrd_apis\";\nimport { STORE_KEYS } from \"@/stores\";\n\nconst test = [\n  { name: \" \", value: \" \" },\n  { name: \"Math\", value: \"M\" },\n  { name: \"Reading\", value: \"R\" }\n];\n\nfunction FilterByTest({ setIsTestSelected, setEventsOpt }) {\n  return (\n    <SelectItem\n      name=\"Test\"\n      options={test}\n      setFlag={setIsTestSelected}\n      getDataFromServer={getFilterOptionsEventSecond}\n      setOptions={setEventsOpt}\n    />\n  );\n}\n\nexport default compose(\n  inject(STORE_KEYS.VIEWMODESTORE),\n  observer,\n  withProps(\n    ({\n      [STORE_KEYS.VIEWMODESTORE]: { setIsTestSelected, setEventsOpt }\n    }) => ({\n      setIsTestSelected,\n      setEventsOpt\n    })\n  )\n)(FilterByTest);"]},"metadata":{},"sourceType":"module"}