{"ast":null,"code":"import _slicedToArray from \"/Users/brohik/repo/adaptive-data-file-extract/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brohik/repo/adaptive-data-file-extract/src/components/Modal/index.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { STORE_KEYS } from \"@/stores\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst delay = s => new Promise(resolve => setTimeout(resolve, s * 1000));\n\nfunction DownloadedModal({\n  openModal,\n  isEmptyData,\n  handleModalClose,\n  setEmptyData,\n  isTest\n}) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(getModalStyle),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        modalStyle = _React$useState2[0];\n\n  let fadeText = \"\";\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  useInterval(() => {\n    setCount(count + 1);\n  }, 1000);\n\n  function useInterval(callback, delay) {\n    const savedCallback = useRef();\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\n  const popupMessage = isEmptyData => {\n    return isEmptyData ? \"No Record found of given search\" : \"System is working on your request...\";\n  };\n\n  count % 5 === 0 ? fadeText = \"Preparing the CSV file\" : fadeText = \"\";\n\n  const _React$useState3 = React.useState(openModal),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  useEffect(() => {\n    setOpen(openModal);\n  }, [openModal]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: !isEmptyData ? null : handleModalClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, isTest ? popupMessage(isEmptyData) : \"Data By Test selection is mandatory\"), isTest ? React.createElement(\"div\", {\n    style: {\n      height: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, fadeText === \"\" ? !isEmptyData && React.createElement(LinearProgress, {\n    variant: \"query\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }) : !isEmptyData && fadeText) : React.createElement(Button, {\n    fullWidth: true,\n    onClick: handleModalClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Ok\"))));\n}\n\nexport default compose(inject(STORE_KEYS.VIEWMODESTORE), observer, withProps(({\n  [STORE_KEYS.VIEWMODESTORE]: {\n    isEmptyData,\n    setEmptyData\n  }\n}) => ({\n  isEmptyData,\n  setEmptyData\n})))(DownloadedModal);","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/components/Modal/index.js"],"names":["React","useEffect","useState","useRef","compose","withProps","inject","observer","makeStyles","Modal","Button","LinearProgress","STORE_KEYS","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","delay","s","Promise","resolve","setTimeout","DownloadedModal","openModal","isEmptyData","handleModalClose","setEmptyData","isTest","classes","modalStyle","fadeText","count","setCount","useInterval","callback","savedCallback","current","tick","id","setInterval","clearInterval","popupMessage","open","setOpen","height","VIEWMODESTORE"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nimport { STORE_KEYS } from \"@/stores\";\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\nconst delay = (s) => new Promise(resolve => setTimeout(resolve, s * 1000));\n\nfunction DownloadedModal({ openModal, isEmptyData, handleModalClose, setEmptyData, isTest }) {\n    const classes = useStyles();\n    const [modalStyle] = React.useState(getModalStyle);\n    let fadeText = \"\";\n    const [count, setCount] = useState(0);\n\n    useInterval(() => {\n        setCount(count + 1);\n    }, 1000);\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n        useEffect(() => {\n            savedCallback.current = callback;\n        }, [callback]);\n        useEffect(() => {\n            function tick() {\n                savedCallback.current();\n            }\n            if (delay !== null) {\n                let id = setInterval(tick, delay);\n                return () => clearInterval(id);\n            }\n        }, [delay]);\n    }\n\n    const popupMessage = (isEmptyData) => {\n        return isEmptyData ? \"No Record found of given search\" : \"System is working on your request...\"\n    }\n\n    count % 5 === 0 ? fadeText = (\"Preparing the CSV file\") : fadeText = (\"\");\n\n    const [open, setOpen] = React.useState(openModal);\n    useEffect(() => { setOpen(openModal) }, [openModal])\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={open}\n                onClose={!isEmptyData ? null : handleModalClose}\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <p id=\"simple-modal-description\">\n                        {isTest ? popupMessage(isEmptyData) : \"Data By Test selection is mandatory\"}\n                    </p>\n                    {isTest ?\n                        <div style={{ height: 20 }}>{fadeText === \"\" ? (!isEmptyData && <LinearProgress variant=\"query\" color=\"primary\" />) : !isEmptyData && fadeText}</div> :\n                        <Button  fullWidth onClick={handleModalClose}>Ok</Button>}\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default compose(\n    inject(STORE_KEYS.VIEWMODESTORE),\n    observer,\n    withProps(({ [STORE_KEYS.VIEWMODESTORE]: { isEmptyData, setEmptyData } }) => ({\n        isEmptyData,\n        setEmptyData\n    }))\n)(DownloadedModal);"]},"metadata":{},"sourceType":"module"}