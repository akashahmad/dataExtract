{"ast":null,"code":"var _jsxFileName = \"/Users/brohik/repo/adaptive-data-file-extract/src/containers/FilterByClass/index.js\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport MultipleSelect from \"@/components/MultipleSelect\";\nimport { STORE_KEYS } from \"@/stores\";\n\nconst FilterByClass = ({\n  optClasses,\n  isClSet,\n  isBuildingsSelected,\n  setIsClassSelected\n}) => {\n  return React.createElement(MultipleSelect, {\n    name: \"className\",\n    options: optClasses,\n    isSet: isClSet // setOptions={setClassesOpt}\n    // getDataFromServer={getFilterOptionsClass}\n    //disabled={!isBuildingsSelected}\n    ,\n    setFlag: setIsClassSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n};\n\nexport default compose(inject(STORE_KEYS.VIEWMODESTORE), observer, withProps(({\n  [STORE_KEYS.VIEWMODESTORE]: {\n    optClasses,\n    isClSet,\n    isBuildingsSelected,\n    setIsClassSelected\n  }\n}) => ({\n  optClasses,\n  isClSet,\n  isBuildingsSelected,\n  setIsClassSelected\n})))(FilterByClass);","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/containers/FilterByClass/index.js"],"names":["React","compose","withProps","inject","observer","MultipleSelect","STORE_KEYS","FilterByClass","optClasses","isClSet","isBuildingsSelected","setIsClassSelected","VIEWMODESTORE"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,SAASC,UAAT,QAA2B,UAA3B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA,mBAAvB;AAA4CC,EAAAA;AAA5C,CAAD,KAAsE;AAC1F,SACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAEH,UAFX;AAGE,IAAA,KAAK,EAAEC,OAHT,CAIE;AACA;AACA;AANF;AAOE,IAAA,OAAO,EAAEE,kBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CAZD;;AAcA,eAAeV,OAAO,CACpBE,MAAM,CAACG,UAAU,CAACM,aAAZ,CADc,EAEpBR,QAFoB,EAGpBF,SAAS,CAAC,CAAC;AAAE,GAACI,UAAU,CAACM,aAAZ,GAA4B;AAAEJ,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,mBAAvB;AAA4CC,IAAAA;AAA5C;AAA9B,CAAD,MAAuG;AAC/GH,EAAAA,UAD+G;AAE/GC,EAAAA,OAF+G;AAG/GC,EAAAA,mBAH+G;AAI/GC,EAAAA;AAJ+G,CAAvG,CAAD,CAHW,CAAP,CASbJ,aATa,CAAf","sourcesContent":["import React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport MultipleSelect from \"@/components/MultipleSelect\";\n\nimport { STORE_KEYS } from \"@/stores\";\n\nconst FilterByClass = ({ optClasses, isClSet, isBuildingsSelected, setIsClassSelected }) => {\n  return (\n    <MultipleSelect\n      name=\"className\"\n      options={optClasses}\n      isSet={isClSet}\n      // setOptions={setClassesOpt}\n      // getDataFromServer={getFilterOptionsClass}\n      //disabled={!isBuildingsSelected}\n      setFlag={setIsClassSelected}\n    />\n  );\n};\n\nexport default compose(\n  inject(STORE_KEYS.VIEWMODESTORE),\n  observer,\n  withProps(({ [STORE_KEYS.VIEWMODESTORE]: { optClasses, isClSet, isBuildingsSelected, setIsClassSelected } }) => ({\n    optClasses,\n    isClSet,\n    isBuildingsSelected,\n    setIsClassSelected\n  }))\n)(FilterByClass);\n"]},"metadata":{},"sourceType":"module"}