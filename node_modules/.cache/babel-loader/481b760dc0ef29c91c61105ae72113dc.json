{"ast":null,"code":"import _slicedToArray from \"/Users/brohik/repo/adaptive-data-file-extract/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brohik/repo/adaptive-data-file-extract/src/components/TextForm/TextForm.js\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { STORE_KEYS } from \"@/stores\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\nfunction TextForm({\n  name,\n  setPostQuery\n}) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    setPostQuery(name.toLowerCase(), e.target.value);\n  };\n\n  return React.createElement(FormControl, {\n    className: classes.formControl,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: name,\n    onChange: handleChange,\n    value: value,\n    id: name,\n    label: \"Data by \".concat(name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\n\nexport default compose(inject(STORE_KEYS.VIEWMODESTORE), observer, withProps(({\n  [STORE_KEYS.VIEWMODESTORE]: {\n    setPostQuery\n  }\n}) => ({\n  setPostQuery\n})))(TextForm);","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/components/TextForm/TextForm.js"],"names":["React","compose","withProps","inject","observer","makeStyles","TextField","FormControl","STORE_KEYS","useStyles","theme","formControl","margin","spacing","width","TextForm","name","setPostQuery","classes","useState","value","setValue","handleChange","e","target","toLowerCase","VIEWMODESTORE"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,SAASC,UAAT,QAA2B,UAA3B;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACnCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,KAAK,EAAE;AAFE;AADsB,CAAL,CAAN,CAA5B;;AAOA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAA0C;AACtC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AADsC,0BAGZT,KAAK,CAACmB,QAAN,CAAe,EAAf,CAHY;AAAA;AAAA,QAG/BC,KAH+B;AAAA,QAGxBC,QAHwB;;AAItC,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACAH,IAAAA,YAAY,CAACD,IAAI,CAACS,WAAL,EAAD,EAAqBF,CAAC,CAACC,MAAF,CAASJ,KAA9B,CAAZ;AACH,GAHD;;AAIA,SACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,OAAO,CAACP,WAAhC;AAA6C,IAAA,UAAU,MAAvD;AAAwD,IAAA,YAAY,EAAC,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAEK,IADV;AAEI,IAAA,QAAQ,EAAEM,YAFd;AAGI,IAAA,KAAK,EAAEF,KAHX;AAII,IAAA,EAAE,EAAEJ,IAJR;AAKI,IAAA,KAAK,oBAAaA,IAAb,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAWH;;AAED,eAAef,OAAO,CAClBE,MAAM,CAACK,UAAU,CAACkB,aAAZ,CADY,EAElBtB,QAFkB,EAGlBF,SAAS,CAAC,CAAC;AAAE,GAACM,UAAU,CAACkB,aAAZ,GAA4B;AAAET,IAAAA;AAAF;AAA9B,CAAD,MAAuD;AAC7DA,EAAAA;AAD6D,CAAvD,CAAD,CAHS,CAAP,CAMbF,QANa,CAAf","sourcesContent":["import React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport { STORE_KEYS } from \"@/stores\";\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\"\n    }\n}));\n\nfunction TextForm({ name, setPostQuery }) {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(\"\");\n    const handleChange = e => {\n        setValue(e.target.value);\n        setPostQuery(name.toLowerCase(), e.target.value);\n    };\n    return (\n        <FormControl className={classes.formControl} noValidate autoComplete=\"off\">\n            <TextField\n                name={name}\n                onChange={handleChange}\n                value={value}\n                id={name}\n                label={`Data by ${name}`}\n            />\n        </FormControl>\n    );\n}\n\nexport default compose(\n    inject(STORE_KEYS.VIEWMODESTORE),\n    observer,\n    withProps(({ [STORE_KEYS.VIEWMODESTORE]: { setPostQuery } }) => ({\n        setPostQuery\n    }))\n)(TextForm);"]},"metadata":{},"sourceType":"module"}