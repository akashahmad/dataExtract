{"ast":null,"code":"import _slicedToArray from \"/Users/brohik/repo/adaptive-data-file-extract/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brohik/repo/adaptive-data-file-extract/src/containers/FilterDownload/index.js\";\nimport React, { useState } from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport DownloadedModal from \"../../components/Modal\";\nimport { getCSVFile } from \"@/stores/wrd_apis\";\nimport { STORE_KEYS } from \"@/stores\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"100%\",\n      height: 50\n    }\n  }\n}));\n\nconst FilterDownload = ({\n  getDownloadFile,\n  postQuery\n}) => {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const handleDownload = async () => {\n    let query = \"\";\n\n    for (let _ref of Object.entries(postQuery)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      let key = _ref2[0];\n      let value = _ref2[1];\n      query = query ? query.concat(\"\", \"&\".concat(key, \"=\").concat(value)) : query.concat(\"\", \"\".concat(key, \"=\").concat(value));\n    }\n\n    setIsLoading(true);\n    !postQuery.test ? null : await getDownloadFile(query, setIsLoading);\n  };\n\n  const handleModalClose = () => {\n    setIsLoading(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    onClick: handleDownload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Download\"), React.createElement(DownloadedModal, {\n    isTest: !!postQuery.test,\n    openModal: isLoading,\n    handleModalClose: handleModalClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default compose(inject(STORE_KEYS.VIEWMODESTORE), observer, withProps(({\n  [STORE_KEYS.VIEWMODESTORE]: {\n    getDownloadFile,\n    postQuery\n  }\n}) => ({\n  getDownloadFile,\n  postQuery\n})))(FilterDownload);","map":{"version":3,"sources":["/Users/brohik/repo/adaptive-data-file-extract/src/containers/FilterDownload/index.js"],"names":["React","useState","compose","withProps","inject","observer","makeStyles","Button","DownloadedModal","getCSVFile","STORE_KEYS","useStyles","theme","root","margin","spacing","width","height","FilterDownload","getDownloadFile","postQuery","classes","isLoading","setIsLoading","handleDownload","query","Object","entries","key","value","concat","test","handleModalClose","VIEWMODESTORE"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SAASC,UAAT,QAA2B,UAA3B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAE,MAFA;AAGPC,MAAAA,MAAM,EAAE;AAHD;AADL;AAD+B,CAAL,CAAN,CAA5B;;AAUA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAoC;AACzD,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AADyD,oBAEvBV,QAAQ,CAAC,KAAD,CAFe;AAAA;AAAA,QAElDqB,SAFkD;AAAA,QAEvCC,YAFuC;;AAGzD,QAAMC,cAAc,GAAG,YAAY;AACjC,QAAIC,KAAK,GAAG,EAAZ;;AACA,qBAAyBC,MAAM,CAACC,OAAP,CAAeP,SAAf,CAAzB,EAAoD;AAAA;;AAAA,UAA1CQ,GAA0C;AAAA,UAArCC,KAAqC;AAClDJ,MAAAA,KAAK,GAAGA,KAAK,GACTA,KAAK,CAACK,MAAN,CAAa,EAAb,aAAqBF,GAArB,cAA4BC,KAA5B,EADS,GAETJ,KAAK,CAACK,MAAN,CAAa,EAAb,YAAoBF,GAApB,cAA2BC,KAA3B,EAFJ;AAGD;;AAEDN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,KAACH,SAAS,CAACW,IAAX,GAAkB,IAAlB,GAAyB,MAAMZ,eAAe,CAACM,KAAD,EAAQF,YAAR,CAA9C;AAED,GAXD;;AAaA,QAAMS,gBAAgB,GAAG,MAAM;AAC7BT,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAA0C,IAAA,OAAO,EAAEW,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAE,CAAC,CAACJ,SAAS,CAACW,IAArC;AAA2C,IAAA,SAAS,EAAET,SAAtD;AAAiE,IAAA,gBAAgB,EAAEU,gBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CA5BD;;AA8BA,eAAe9B,OAAO,CACpBE,MAAM,CAACM,UAAU,CAACuB,aAAZ,CADc,EAEpB5B,QAFoB,EAGpBF,SAAS,CACP,CAAC;AAAE,GAACO,UAAU,CAACuB,aAAZ,GAA4B;AAAEd,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB;AAA9B,CAAD,MAAqE;AACnED,EAAAA,eADmE;AAEnEC,EAAAA;AAFmE,CAArE,CADO,CAHW,CAAP,CASbF,cATa,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { inject, observer } from \"mobx-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport DownloadedModal from \"../../components/Modal\";\nimport { getCSVFile } from \"@/stores/wrd_apis\";\n\nimport { STORE_KEYS } from \"@/stores\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"100%\",\n      height: 50\n    }\n  }\n}));\n\nconst FilterDownload = ({ getDownloadFile, postQuery }) => {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleDownload = async () => {\n    let query = \"\";\n    for (let [key, value] of Object.entries(postQuery)) {\n      query = query\n        ? query.concat(\"\", `&${key}=${value}`)\n        : query.concat(\"\", `${key}=${value}`);\n    }\n\n    setIsLoading(true);\n    !postQuery.test ? null : await getDownloadFile(query, setIsLoading);\n\n  };\n\n  const handleModalClose = () => {\n    setIsLoading(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button type=\"submit\" variant=\"contained\" onClick={handleDownload}>\n        Download\n      </Button>\n      <DownloadedModal isTest={!!postQuery.test} openModal={isLoading} handleModalClose={handleModalClose} />\n    </div>\n  );\n};\n\nexport default compose(\n  inject(STORE_KEYS.VIEWMODESTORE),\n  observer,\n  withProps(\n    ({ [STORE_KEYS.VIEWMODESTORE]: { getDownloadFile, postQuery } }) => ({\n      getDownloadFile,\n      postQuery\n    })\n  )\n)(FilterDownload);\n"]},"metadata":{},"sourceType":"module"}